apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-cache
spec:
  serviceName: immich-cache
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.2-alpine
          command:
            - redis-server
            - "/redis-config/redis.conf"
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: immich-cache
              mountPath: /data
            - name: redis-config
              mountPath: /redis-config
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 256Mi
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
            items:
              - key: redis.conf
                path: redis.conf
  volumeClaimTemplates:
    - metadata:
        name: immich-cache
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |
    dir /data
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    save 900 1
    save 300 10
    save 60 10000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: immich-cache
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  nfs:
    server: hactar.lan
    path: /mnt/tank/server/immich/cache
---
apiVersion: v1
kind: Service
metadata:
  name: immich-cache
spec:
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
